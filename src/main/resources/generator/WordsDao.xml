<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.WordsDao">
  <resultMap id="BaseResultMap" type="generate.Words">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="typeofcontent" jdbcType="VARCHAR" property="typeofcontent" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="txtfilepath" jdbcType="VARCHAR" property="txtfilepath" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="builder" jdbcType="VARCHAR" property="builder" />
    <result column="author" jdbcType="VARCHAR" property="author" />
  </resultMap>
  <sql id="Base_Column_List">
    id, typeofcontent, content, txtfilepath, createtime, updatetime, builder, author
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from words
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from words
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="generate.Words" useGeneratedKeys="true">
    insert into words (typeofcontent, content, txtfilepath, 
      createtime, updatetime, builder, 
      author)
    values (#{typeofcontent,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{txtfilepath,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{builder,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="generate.Words" useGeneratedKeys="true">
    insert into words
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeofcontent != null">
        typeofcontent,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="txtfilepath != null">
        txtfilepath,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="builder != null">
        builder,
      </if>
      <if test="author != null">
        author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeofcontent != null">
        #{typeofcontent,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="txtfilepath != null">
        #{txtfilepath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="builder != null">
        #{builder,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="generate.Words">
    update words
    <set>
      <if test="typeofcontent != null">
        typeofcontent = #{typeofcontent,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="txtfilepath != null">
        txtfilepath = #{txtfilepath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="builder != null">
        builder = #{builder,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generate.Words">
    update words
    set typeofcontent = #{typeofcontent,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      txtfilepath = #{txtfilepath,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      builder = #{builder,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>